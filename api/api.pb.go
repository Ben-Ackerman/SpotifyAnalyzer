// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TracksInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Artist               string   `protobuf:"bytes,2,opt,name=artist,proto3" json:"artist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TracksInfo) Reset()         { *m = TracksInfo{} }
func (m *TracksInfo) String() string { return proto.CompactTextString(m) }
func (*TracksInfo) ProtoMessage()    {}
func (*TracksInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *TracksInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracksInfo.Unmarshal(m, b)
}
func (m *TracksInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracksInfo.Marshal(b, m, deterministic)
}
func (m *TracksInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracksInfo.Merge(m, src)
}
func (m *TracksInfo) XXX_Size() int {
	return xxx_messageInfo_TracksInfo.Size(m)
}
func (m *TracksInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TracksInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TracksInfo proto.InternalMessageInfo

func (m *TracksInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TracksInfo) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

type LyricsInfo struct {
	Lyrics               string   `protobuf:"bytes,1,opt,name=lyrics,proto3" json:"lyrics,omitempty"`
	GeniusURI            string   `protobuf:"bytes,2,opt,name=geniusURI,proto3" json:"geniusURI,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LyricsInfo) Reset()         { *m = LyricsInfo{} }
func (m *LyricsInfo) String() string { return proto.CompactTextString(m) }
func (*LyricsInfo) ProtoMessage()    {}
func (*LyricsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *LyricsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LyricsInfo.Unmarshal(m, b)
}
func (m *LyricsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LyricsInfo.Marshal(b, m, deterministic)
}
func (m *LyricsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LyricsInfo.Merge(m, src)
}
func (m *LyricsInfo) XXX_Size() int {
	return xxx_messageInfo_LyricsInfo.Size(m)
}
func (m *LyricsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LyricsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LyricsInfo proto.InternalMessageInfo

func (m *LyricsInfo) GetLyrics() string {
	if m != nil {
		return m.Lyrics
	}
	return ""
}

func (m *LyricsInfo) GetGeniusURI() string {
	if m != nil {
		return m.GeniusURI
	}
	return ""
}

func init() {
	proto.RegisterType((*TracksInfo)(nil), "api.TracksInfo")
	proto.RegisterType((*LyricsInfo)(nil), "api.LyricsInfo")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 158 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0xb2, 0xe0, 0xe2, 0x0a, 0x29,
	0x4a, 0x4c, 0xce, 0x2e, 0xf6, 0xcc, 0x4b, 0xcb, 0x17, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d,
	0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0xc4, 0xb8, 0xd8, 0x12, 0x8b, 0x4a,
	0x32, 0x8b, 0x4b, 0x24, 0x98, 0xc0, 0xa2, 0x50, 0x9e, 0x92, 0x13, 0x17, 0x97, 0x4f, 0x65, 0x51,
	0x66, 0x32, 0x44, 0xa7, 0x18, 0x17, 0x5b, 0x0e, 0x98, 0x07, 0xd5, 0x0b, 0xe5, 0x09, 0xc9, 0x70,
	0x71, 0xa6, 0xa7, 0xe6, 0x65, 0x96, 0x16, 0x87, 0x06, 0x79, 0x42, 0x0d, 0x40, 0x08, 0x18, 0x59,
	0x72, 0xb1, 0x41, 0xcc, 0x10, 0xd2, 0xe7, 0xe2, 0x74, 0x4f, 0x2d, 0x81, 0x72, 0xf8, 0xf5, 0x40,
	0xae, 0x44, 0xb8, 0x4b, 0x0a, 0x22, 0x80, 0xb0, 0x4e, 0x89, 0x21, 0x89, 0x0d, 0xec, 0x09, 0x63,
	0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbf, 0xf3, 0x32, 0x05, 0xd1, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LyricsClient is the client API for Lyrics service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LyricsClient interface {
	GetLyrics(ctx context.Context, in *TracksInfo, opts ...grpc.CallOption) (*LyricsInfo, error)
}

type lyricsClient struct {
	cc *grpc.ClientConn
}

func NewLyricsClient(cc *grpc.ClientConn) LyricsClient {
	return &lyricsClient{cc}
}

func (c *lyricsClient) GetLyrics(ctx context.Context, in *TracksInfo, opts ...grpc.CallOption) (*LyricsInfo, error) {
	out := new(LyricsInfo)
	err := c.cc.Invoke(ctx, "/api.Lyrics/GetLyrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LyricsServer is the server API for Lyrics service.
type LyricsServer interface {
	GetLyrics(context.Context, *TracksInfo) (*LyricsInfo, error)
}

// UnimplementedLyricsServer can be embedded to have forward compatible implementations.
type UnimplementedLyricsServer struct {
}

func (*UnimplementedLyricsServer) GetLyrics(ctx context.Context, req *TracksInfo) (*LyricsInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLyrics not implemented")
}

func RegisterLyricsServer(s *grpc.Server, srv LyricsServer) {
	s.RegisterService(&_Lyrics_serviceDesc, srv)
}

func _Lyrics_GetLyrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TracksInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LyricsServer).GetLyrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Lyrics/GetLyrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LyricsServer).GetLyrics(ctx, req.(*TracksInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _Lyrics_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Lyrics",
	HandlerType: (*LyricsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLyrics",
			Handler:    _Lyrics_GetLyrics_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
