version: "3.7"
services:
  analyzerservice:
    build:
      context: .
      dockerfile: "./AnalyzerService/Dockerfile"
    volumes:
      - $GOPATH/pkg/mod:/go/pkg/mod
    ports:
      - ${AnalyzerServicePort}:${AnalyzerServicePort}
    environment:
      - AnalyzerServicePort
      - LyricsServicePort
      - LyricsServiceName
      - SessionsStoreKey
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_PORT
      - POSTGRES_DB
      - PGPASSWORD
    restart: always
    depends_on:
      - lyricsservice
      - postgres
  lyricsservice:
    build: 
      context: .
      dockerfile: "./LyricsService/Dockerfile"
    volumes:
      - $GOPATH/pkg/mod:/go/pkg/mod
    ports:
      - ${LyricsServicePort}:${LyricsServicePort}
    environment:
      - LyricsServicePort
      - GeniusAccessToken
    restart: always
  spotifyservice:
    environment:
      - SpotifyClientID
      - SpotifyClientSecret
      - SpotifyServicePort
      - SpotifyRedirectURL
      - SessionsStoreKey
    build:
      context: .
      dockerfile: "./SpotifyService/Dockerfile"
    expose:
      - ${SpotifyServicePort}
    volumes:
      - $GOPATH/pkg/mod:/go/pkg/mod
    restart: always
  nginx:
    build: 
      context: .
      dockerfile: "./nginx/Dockerfile"
    ports:
      - "80:80"
    depends_on:
      - spotifyservice
      - analyzerservice
  postgres:
    image: "postgres:11"
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
    container_name: "postgres_1"
    expose:
      - ${POSTGRES_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always

volumes:
  pgdata:
  